#!/usr/bin/ksh -p
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright (c) 2013, 2016, Oracle and/or its affiliates.  All rights reserved.
# Copyright 2019 OmniOS Community Edition (OmniOSce) Association.
#

# Load SMF constants and functions
. /lib/svc/share/smf_include.sh
. /lib/svc/share/fs_include.sh
. /lib/svc/share/pkg5_include.sh

CHOWN=/usr/bin/chown
ZFS=/usr/sbin/zfs

dataset="`svcprop -p config/dataset $SMF_FMRI`"
[ -n "$dataset" ] || dataset=pkg-repositories

mp="`svcprop -p config/mountpoint $SMF_FMRI`"
[ -n "$mp" ] || mp=/var/share/pkg/repositories

case "$1" in
'start')
	# check if we already have a mounted dataset
	readmnttab $mp < /etc/mnttab
	[ "$fstype" = zfs ] && exit $SMF_EXIT_OK

	# Only continue if the system has a ZFS root
	readmnttab / < /etc/mnttab
	[ "$fstype" = zfs ] || exit $SMF_EXIT_OK

	# readmnttab has populated 'special'
	be=$special
	pool=${special%%/*}

	# If the dataset exists, mount it along with any child datasets,
	# then exit.
	if $ZFS list "$pool/$dataset" >/dev/null 2>&1; then
		child_fs_mount=0
		for child in \
		    `$ZFS list -H -r -t filesystem -o name "$pool/$dataset"`
		do
			$ZFS mount "$child"
			((child_fs_mount += $?))
		done
		[ "$child_fs_mount" -eq 0 ] && exit $SMF_EXIT_OK
		echo "Unable to mount child datasets of $pool/$dataset"
		exit $SMF_EXIT_ERR_FATAL
	fi

	# Otherwise, create the dataset, and delegate permissions to the user.
	$ZFS create -o mountpoint="$mp" "$pool/$dataset"
	check_failure $? "Unable to create $pool/$dataset" $SMF_FMRI fatal

	$ZFS allow pkg5srv create,mount,canmount,snapshot "$pool/$dataset"
	check_failure $? \
	    "Unable to delegate ZFS permissions on $pool/$dataset" \
	    $SMF_FMRI fatal

	$CHOWN pkg5srv:pkg5srv "$mp"
	check_failure $? \
	    "Unable to chown $mp" \
	    $SMF_FMRI fatal
	;;
esac

exit $SMF_EXIT_OK
